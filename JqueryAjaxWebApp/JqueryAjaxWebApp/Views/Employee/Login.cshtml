@model JqueryAjaxWebApp.Models.Login

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<h4>Login</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="usrname" class="control-label"></label>
                <input asp-for="usrname" class="form-control" id="usrname" />
                <span asp-validation-for="usrname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="password" class="control-label"></label>
                <input asp-for="password" class="form-control" id="password" />
                <span asp-validation-for="password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input  value="Login" class="btn btn-primary"  style="background-color:#4d4dff!important" onclick="Validate()" />
            </div>
        </form>
    </div>
</div>

<div>
    
    
    <a asp-action="Create">Back to Registration</a>
</div>
<script>

    function Validate() {

    $.ajax(
    {
      type: "POST",
      url: '@Url.Action("EmployeeLogin", "Employee")',
      data: {
        usrname: $('#usrname').val(),
        password: $('#password').val()
      },
      error: function (result) {
        alert("There is a Problem, Try Again!");
      },
      success: function (result) {
        console.log(result);
        if (result.status == true) {
            alert(result.message)
          window.location.href = '@Url.Action("Addjobdetail", "Employee")';
        }
        else {
          alert(result.message);
        }
      }

    });
  }

</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
